<?xml version="1.0" encoding="UTF-8"?>
<project name="AXEL beta" default="build.lib" basedir=".">
<!--
AXEL Library built file system
==============================

Use this file to generate axel.js with "ant". You can select the source files
to include in the library by editing "ant.properties". See
"docs/integrators-guide.txt".

Main targets:

build.lib: creates a minified axel.js inside axel folder

build.debug: creates a non-minified axel.js inside axel folder so that it can     
             be used for debug

Author(s) : Stephane Sire
--> 

  <!-- 
     *****************************************************
     **             Initializations                     **
     *****************************************************
  -->    
  
  <target name="-load.properties">
    <property file="ant.properties"/>
  </target>

  <target name="-init.files" depends="-load.properties">
    <!-- /////////////////////////////////////////////////////////
         // AXEL source files to be included inside the library //
         //           EDIT ant.properties to change it          //
         /////////////////////////////////////////////////////////
    -->         
    <filelist id="files.core" dir="${core.src.dir}" 
              files="${core.lib.files}"/>
              
    <filelist id="files.editor" dir="${editor.src.dir}" 
              files="${editor.lib.files}"/>
              
    <filelist id="files.devices" dir="${devices.src.dir}"      
              files="${devices.lib.files}"/>

    <filelist id="files.plugins" dir="${plugins.src.dir}"     
              files="${plugins.lib.files}"/>

    <filelist id="files.filters" dir="${filters.src.dir}"
              files="${filters.lib.files}"/>

    <filelist id="files.locales" dir="${locales.src.dir}"
              files="${locales.lib.files}"/>

    <filelist id="files.css" dir="${css.src.dir}"
              files="${css.lib.files}"/>
  </target>

  <target name="-init.release">
    <!-- PLEASE update version number in "../distribution/release-nb.txt"
    -->                     
    <loadfile property="release.number" 
              srcFile="../distrib/release-nb.txt"/>
    <loadfile property="distrib.copyright"
              srcFile="../distrib/copyright-header-js.txt"/>
    <loadfile property="distrib.license"
              srcFile="../distrib/license-header-js.txt"/>
    <property name="release.dir" 
              value="../${product.name}-${release.number}"/>
  </target> 
  
  <!-- "revision.number" property initialization
        It is set to the current revision number as per "svn info"; 
        note that this also works offline 
  -->
  <target name="-init.revision">
<!--    <exec executable="/bin/sh" outputproperty="revision.number">
      <arg line='-c "svn info -r "HEAD"| awk &quot;/Revision/{print\$$2}&quot;"'/>
    </exec> -->
    <property name="revision.number" value="git rep"/>
  </target>   

  <!-- *****************************************************
       **           Library build process                 **
       *****************************************************
  -->

  <target name="-flatten" depends="-load.properties, -init.files">
    <concat destfile="${build.dir}/${product.name}-tmp.js" force="no">
      <filelist refid="files.core"/>
      <filelist refid="files.editor"/>
      <filelist refid="files.devices"/>
      <filelist refid="files.plugins"/>
      <filelist refid="files.filters"/>
      <filelist refid="files.locales"/>
    </concat>
  </target>

  <!-- Build minified axel.js 
  --> 
  <target name="build.lib" depends="-load.properties, -init.files, -init.release, -init.revision">
    
    <echo message="Creating minified AXEL library into ${build.dir}" />
    <!-- FIXME : fail if not exist ${build.dir} -->

    <antcall target="-flatten" />

    <!-- Minify library file -->
    <java jar="${javascript.compressor}" fork="true">
      <arg line="-o ${build.dir}/${product.name}-min.js ${build.dir}/${product.name}-tmp.js" />
    </java>

    <!-- Add license notice and copy to dest -->
    <filter token="COPYRIGHT" value="${distrib.copyright}"/>
    <filter token="VERSION" value="${release.number}"/>
    <filter token="LICENSE" value="${distrib.license}"/>
    <filter token="REV" value="${revision.number}"/>
    <!-- FIXME: we should include revision number somewhere -->
    <copy file="../distrib/library-header-js.txt"
          tofile="${build.dir}/library-header-js.txt" filtering="true"/>

    <concat destfile="${build.dir}/${product.name}.js" force="no">
      <file file="${build.dir}/library-header-js.txt"/>
      <file file="${build.dir}/${product.name}-min.js"/>
    </concat>
    <delete file="${build.dir}/${product.name}-tmp.js"/>
    <delete file="${build.dir}/library-header-js.txt"/>
    <delete file="${build.dir}/${product.name}-min.js"/>
    
    <echo message="Creating CSS file into ${build.dir}" />
    
    <concat destfile="${build.dir}/${product.name}.css">
        <string>/**************************/
/*  AXEL library CSS file */
/**************************/
</string>
      <filelist refid="files.css"/>
    </concat>
  </target>

  <!-- Build debug version of axel.js 
       (simple concatenation of source files) 
  -->
  <target name="build.debug" depends="-load.properties, -init.files, -init.release, -init.revision">
    <echo message="Creating debug AXEL library into ${build.dir}"/>
    <!-- FIXME : fail if not exist ${build.dir} -->

    <antcall target="-flatten"/>
    <!-- Add license notice and copy to dest -->
    <filter token="COPYRIGHT" value="${distrib.copyright}"/>
    <filter token="VERSION" value="${release.number}"/>
    <filter token="LICENSE" value="${distrib.license}"/>
    <filter token="REV" value="${revision.number}"/>
    <concat destfile="${build.dir}/${product.name}-brut.js" force="no">
      <file file="../distrib/library-header-js.txt"/>
      <file file="${build.dir}/${product.name}-tmp.js"/>
    </concat>
    <copy file="${build.dir}/${product.name}-brut.js" tofile="${build.dir}/${product.name}.js" filtering="true"/>
    <delete file="${build.dir}/${product.name}-brut.js"/>
    <delete file="${build.dir}/${product.name}-tmp.js"/>
    <!-- FIXME: do VERSION filtering stuff -->
  </target>

  <!-- *****************************************************
       **                 JS Documentation                **
       *****************************************************
  -->
  <!-- <target name="build.doc" depends="-load.properties">
    <echo message="Generating JSDoc documentation..."/>
    <echo message="Paths are :"/>
    <echo message=" - build.dir =  ${doc.build.dir}"/>
    <echo message=" - jsdoc.generator = ${jsdoc.generator}"/>
    <mkdir dir="${doc.build.dir}"/>
    <exec executable="java">
      <arg line='-jar ${jsdoc.generator.dir}/jsrun.jar ${jsdoc.generator.dir}/app/run.js ../src/ -r=4 -a -d=${doc.build.dir} -t=${jsdoc.generator.dir}/templates/jsdoc'/>
    </exec>
    <echo message="JSDoc documentation generated successfully"/>
  </target> -->

  <!-- *****************************************************
       **                 Utilities                       **
       *****************************************************
  -->

  <target name="clean" depends="-load.properties">
    <delete dir="${release.dir}"/>
  </target>
  
</project>
